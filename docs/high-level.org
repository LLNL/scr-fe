* Organization

The SCR frontend should be easy to use and intuitive to users.
That said, it should act like other command line interfaces, such as git.

SCR can help to manage the way in which your program runs.

SCR data files go into a ~.scr/~ directory.
SCR configuration is found in ~.scrconfig~.

Make ~scr config~ work like ~git config~.
* Thoughts

So, now we have to decide how we want users to interact with SCR.

** Default behavior

#+BEGIN_SRC sh
scr
#+END_SRC

Print the help/usage text.

** Interact with the configuration files

Files may be the key point here.

*** Print details of the environment?

** print a hash file

This requires we know the scr installation location.
It will be trick to install the python tools to the right spot.
But, once they are there, we can figure out where we are.

*** Understand the installation location

** Setup the run commands

The users may want to configure their scr run scripts, turning options on and off.
We should make this as easy and compose-able as possible.

*** Set the RUN command

*** Set the RESTART command

*** Configure the job launcher

This is where I will have to talk with Frank.
